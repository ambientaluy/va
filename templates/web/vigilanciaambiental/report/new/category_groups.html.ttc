use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.24
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1504666205',
        'name' => 'report/new/category_groups.html',
    },
    BLOCK => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
#line 31 "/home/fms/PorMiBarrio/pormibarrio/templates/web/vigilancia_ambiental/report/new/category_groups.html"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('collapse')
              || $context->throw($context->error);

$output .=  "\n<script>\n	";
#line 7 "/home/fms/PorMiBarrio/pormibarrio/templates/web/vigilancia_ambiental/report/new/category_groups.html"
if ($stash->get('category_groups_json')) {
$output .=  "\n		var category_groups = ";
#line 4 "/home/fms/PorMiBarrio/pormibarrio/templates/web/vigilancia_ambiental/report/new/category_groups.html"
$output .=  $stash->get('category_groups_json');
$output .=  ";\n	";
}
else {
$output .=  "\n		var category_groups = {};\n	";
}

$output .=  "\n</script>\n\n<label class=\"active\" for=\"categoria\">Categoría & subcategoría *</label>\n<p class=\"help-block\">Si la categoría a la que quiere reportar no se encuentra, por favor no lo haga en otra. Con el tiempo iremos incorporando nuevas categorías.</p>\n<select name='category_groups' id='form_category_groups' onchange='form_category_group_onchange()'  class=\"required\" required>\n	<option value=\"\">-- Selecciona una categoría --</option>	\n	";
#line 18 "/home/fms/PorMiBarrio/pormibarrio/templates/web/vigilancia_ambiental/report/new/category_groups.html"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get('category_groups_seen');
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'group'} = $_tt_value;
$output .=  "\n		";
#line 15 "/home/fms/PorMiBarrio/pormibarrio/templates/web/vigilancia_ambiental/report/new/category_groups.html"
$stash->set('group_name', $stash->get(['group', 0, 1, 0]));
$output .=  "\n		";
#line 16 "/home/fms/PorMiBarrio/pormibarrio/templates/web/vigilancia_ambiental/report/new/category_groups.html"

# CAPTURE
$stash->set('group_name_lc', do {
    my $output = '';

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('lower')
              || $context->throw($context->error);

$output .=  $stash->get('group_name');
    
    &$_tt_filter($output);
};

    $output;
});

$output .=  "\n		<option value='";
#line 17 "/home/fms/PorMiBarrio/pormibarrio/templates/web/vigilancia_ambiental/report/new/category_groups.html"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['group', 0, 0, 0]);
    
    &$_tt_filter($output);
};

$output .=  "' ";
#line 17 "/home/fms/PorMiBarrio/pormibarrio/templates/web/vigilancia_ambiental/report/new/category_groups.html"
if ($stash->get('category_group') eq $stash->get(['group', 0, 0, 0])) {
$output .=  ' selected';
}

$output .=  ">";
#line 17 "/home/fms/PorMiBarrio/pormibarrio/templates/web/vigilancia_ambiental/report/new/category_groups.html"
if ($stash->get(['loop', 0, 'first', 0])) {
#line 17 "/home/fms/PorMiBarrio/pormibarrio/templates/web/vigilancia_ambiental/report/new/category_groups.html"
$output .=  $stash->get('group_name');
}
else {
#line 17 "/home/fms/PorMiBarrio/pormibarrio/templates/web/vigilancia_ambiental/report/new/category_groups.html"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get('group_name');
    
    &$_tt_filter($output);
};

}

$output .=  "</option>\n	";;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

$output .=  "\n</select>\n\n";
#line 21 "/home/fms/PorMiBarrio/pormibarrio/templates/web/vigilancia_ambiental/report/new/category_groups.html"
if ($stash->get('category')) {
#line 21 "/home/fms/PorMiBarrio/pormibarrio/templates/web/vigilancia_ambiental/report/new/category_groups.html"

# CAPTURE
$stash->set('category', do {
    my $output = '';

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('lower')
              || $context->throw($context->error);

$output .=  $stash->get('category');
    
    &$_tt_filter($output);
};

    $output;
});

}


$output .=  "\n<select name='category' id='form_category' ";
#line 24 "/home/fms/PorMiBarrio/pormibarrio/templates/web/vigilancia_ambiental/report/new/category_groups.html"
if (! $stash->get('category')) {
$output .=  ' disabled';
}

$output .=  "  class=\"required\" required>\n	";
#line 28 "/home/fms/PorMiBarrio/pormibarrio/templates/web/vigilancia_ambiental/report/new/category_groups.html"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get('category_currently_loaded');
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'cat_op'} = $_tt_value;
$output .=  "\n		";
#line 26 "/home/fms/PorMiBarrio/pormibarrio/templates/web/vigilancia_ambiental/report/new/category_groups.html"

# CAPTURE
$stash->set('cat_op_lc', do {
    my $output = '';

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('lower')
              || $context->throw($context->error);

$output .=  $stash->get('cat_op');
    
    &$_tt_filter($output);
};

    $output;
});

$output .=  "\n		<option value='";
#line 27 "/home/fms/PorMiBarrio/pormibarrio/templates/web/vigilancia_ambiental/report/new/category_groups.html"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get('cat_op');
    
    &$_tt_filter($output);
};

$output .=  "' ";
#line 27 "/home/fms/PorMiBarrio/pormibarrio/templates/web/vigilancia_ambiental/report/new/category_groups.html"
if ($stash->get(['report', 0, 'category', 0]) eq $stash->get('cat_op') || $stash->get('category') eq $stash->get('cat_op_lc')) {
$output .=  ' selected';
}

$output .=  ">";
#line 27 "/home/fms/PorMiBarrio/pormibarrio/templates/web/vigilancia_ambiental/report/new/category_groups.html"
if ($stash->get(['loop', 0, 'first', 0])) {
#line 27 "/home/fms/PorMiBarrio/pormibarrio/templates/web/vigilancia_ambiental/report/new/category_groups.html"
$output .=  $stash->get('cat_op');
}
else {
#line 27 "/home/fms/PorMiBarrio/pormibarrio/templates/web/vigilancia_ambiental/report/new/category_groups.html"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get('cat_op');
    
    &$_tt_filter($output);
};

}

$output .=  "</option>\n	";;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

$output .=  "\n</select>\n\n";
    
    &$_tt_filter($output);
};

    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
    DEFBLOCKS => {

    },
});
