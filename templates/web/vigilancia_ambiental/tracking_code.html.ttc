use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.24
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1504666205',
        'name' => 'tracking_code.html',
    },
    BLOCK => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
#line 30 "/home/fms/PorMiBarrio/pormibarrio/templates/web/pormibarrio/tracking_code.html"
if ($stash->get(['c', 0, 'config', 0, 'BASE_URL', 0]) eq 'http://www.fixmystreet.com') {
$output .=  "\n<script type=\"text/javascript\">\n\n  var _gaq = _gaq || [];\n  _gaq.push(['_setAccount', 'UA-660910-4']);\n  _gaq.push(['_setDomainName', '.fixmystreet.com']);\n  _gaq.push (['_gat._anonymizeIp']);\n  _gaq.push(['_trackPageview']);\n\n  (function() {\n    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;\n    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';\n    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);\n  })();\n\n</script>\n";
}
else {
$output .=  "\n<!-- Tracking code not inserted as \"";
#line 18 "/home/fms/PorMiBarrio/pormibarrio/templates/web/pormibarrio/tracking_code.html"
$output .=  $stash->get(['c', 0, 'config', 0, 'BASE_URL', 0]);
$output .=  "\" not \"http://www.fixmystreet.com\" -->\n<script type=\"text/javascript\">\n  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');\n\n  ga('create', 'UA-34702401-7', 'auto');\n  ga('send', 'pageview');\n\n</script>\n\n";
}

$output .=  "\n";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
    DEFBLOCKS => {

    },
});
